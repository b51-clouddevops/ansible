- name: Configure the Yum Repos 
  ansible.builtin.shell: curl --silent --location https://rpm.nodesource.com/setup_16.x | sudo bash -

- name: Install NodeJS 
  ansible.builtin.yum:
    name: "{{item}}"
    state: present  
  loop: 
    - nodejs 
    - gcc-c++  

- name: Adding Application User 
  ansible.builtin.user:
    name: roboshop 
    comment: roboshop project application user 

- name: Download and extracting frontend 
  ansible.builtin.include_role:
    name: common
    tasks_from: download

- name: Deleting Old Content
  ansible.builtin.file:
    path: /home/roboshop/{{COMPONENT}}
    state: absent  

- name: Copy file to destination 
  ansible.builtin.copy:
    src:  /tmp/{{COMPONENT}}-main/
    dest: /home/roboshop/{{COMPONENT}}/
    remote_src: yes
  become_user: roboshop 

- name: Installing node.js packages
  community.general.npm:
    path: /home/roboshop/{{COMPONENT}}

- name: Copying the systemd file
  ansible.builtin.copy:
     src: systemd.service 
     dest: /etc/systemd/system/{{COMPONENT}}.service




# $ cd /home/roboshop/catalogue
# $ npm install

# ```
# 1. Update SystemD file with correct IP addresses
    
#     Update `MONGO_DNSNAME` with MongoDB Server IP
    
#     ```sql
#     $ vim systemd.servce
#     ```
    
# 2. Now, lets set up the service with systemctl.

# ```bash
# # mv /home/roboshop/catalogue/systemd.service /etc/systemd/system/catalogue.service
# # systemctl daemon-reload
# # systemctl start catalogue
# # systemctl enable catalogue
# # systemctl status catalogue -l

# **NOTE:** You should see the log saying `connected to MongoDB`, then only your catalogue
# will work and can fetch the items from MongoDB

# **Ref Log:**
# {"level":"info","time":1656660782066,"pid":12217,"hostname":"ip-172-31-13-123.ec2.internal","msg":**"MongoDB connected",**"v":1}
# ```

# 1. Now, you would still see **`CATEGORIES`** on the frontend page as empty. 
# 2. That’s because your `frontend` doesn't know who the `CATALOGUE` is when someone clicks the `CATEGORIES` option. So, we need to update the Nginx Reverse Proxy on the frontend. If not, you’d still see the frontend without categories.

# 1. In order to make it work, update the proxy file in Nginx with the `CATALOGUE` server IP Address in the **`FRONTEND`** Server  

# **`Note:`** Do not do a copy and paster of IP in the proxy file, there are high chances to enter the empty space characters, which are not visible on the vim editor. Manual Typing of IP Address/ DNS Name is preferred. 

# > # vim /etc/nginx/default.d/roboshop.conf
# > 

# 1. Reload and restart the Nginx service.

# > # systemctl restart nginx
# > 

# 1. Now you should be able to see the categories on the frontend page.